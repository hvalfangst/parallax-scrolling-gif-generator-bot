name: Parallax Scrolling GIF Generator

# Runs on schedule every morning at 04:00 UTC, which is 06:00 CET time. Manual trigger is also available.
on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  parallax-scrolling-gif-generator:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Gives write permission to repository contents
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-dev pkg-config

      - name: Install Python dependencies
        run: pip3 install openai

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Create directories
        run: mkdir -p mutations gifs images layers prompts

      - name: Run tests
        run: cargo test --all-features

      - name: Run GIF generator in headless mode with 2 retries on failure
        run: |
          for i in {1..3}; do
            if cargo run -- --headless; then
              echo "GIF generation successful"
              break
            else
              echo "GIF generation failed. Retrying... ($i/3)"
            fi
            if [ $i -eq 3 ]; then
              echo "GIF generation failed after 3 attempts."
              exit 1
            fi
          done

      - name: Configure Git
        run: |
          git config --global user.name "Parallax Scrolling GIF Generator Bot"
          git config --global user.email "noreply@github.com"

      - name: Check for changes
        id: check_changes
        run: |
          git add images/ prompts/ layers/ gifs/ README.md
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      - name: Push Generated Content
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git commit -m "ğŸ¦€Generated files for $(date +%Y-%m-%d)ğŸ¦€" 
          git push origin main